.. _test.rst:

###########################
Test relates to development
###########################

******************************
Before providing special build
******************************

1. ``djrun dmldj udb``

	.. note::
		
		| This mainly test the Data Manipulate Language (DML) of DB2
		| 
		| The syntax for this: 
		
			.. code-block:: bash
			
				djrun [bucket] [data source]
				
		In this case, the bucket name is ``dmldj`` and the data source is ``udb`` (i.e. db2)
		The test result (particulaly the errors) will be placed under ``$HOME/rtest/err`` and 
		one should focus on **.dfr** file (i.e. fedlbac01udb.dfr, fedlbac02udb.dfr, fedlbac03udb.dfr).
		Every failed test will produce a pair of files: one is **.dfr**, the other is **.err**
		
		
	.. seealso::
	
		The test bucket ``dmldj`` is located under ``$HOME/sqllib/int/TOP/test/fvt/standalone/dmldj``
		You can go into the bucket to see what the bucket test about. In some cases, the bucket may
		include "README.txt".
				
		

2. ``fasterpath sanity -log``

	.. note::
	
		This test the basic functionality of db2. The test result is usually print on the screen and
		to a log. The log file usually located at, for instance, ``/view/iidev28_db2_v105fp6r_linuxamd64_n150731_hzyhzyhzy/vbs/db2root/buildlog/fasterpath.log``
		
********************************
Access explain plan through tool
********************************

This will work with the tool located under ``$HOME/bin/plan.sh``. 

Steps:

1. connect to local db (i.e. ``db2 connect to feddb``)
2. ``db2 -tvf $HOME/sqllib/misc/EXPLAIN.DDL``
	
		.. note::
			
				This step needed because explain plan has requirement on certain tables
				
3. make a sql file, and put sql you wnat to explain in it.

	For example: I created ``test.sql`` file, and put the following query inside it:
	
		.. code-block:: sql
		
			select count(*) from (select c1, c2, c3 from N1 group by c1,c2,c3);
			
4. ``$HOME/bin/plan.sh test.sql -db feddb``