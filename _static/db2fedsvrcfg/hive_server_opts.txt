SQLQG_GROUP_BY_SERVER_OPTION,
"SELECT IT1C3 FROM %s GROUP BY IT1C3"

SQLQG_ORDER_BY_SERVER_OPTION,
"SELECT IT1C3 FROM %s ORDER BY IT1C3"
  
SQLQG_COLFUNC_SERVER_OPTION,
"SELECT MAX(IT1C1) FROM %s"

SQLQG_VARCHAR_BLANKPADDED_COMPARISON_SERVER_OPTION,
"SELECT IT1C1 FROM %s WHERE IT1C6 = '12345  '"

SQLQG_CHAR_BLANKPADDED_COMPARISON_SERVER_OPTION,
"SELECT IT1C1 FROM %s WHERE IT1C4 = 'F '"

SQLQG_COLFUNC_EXPR_SERVER_OPTION,
"SELECT MAX(IT1C1+IT1C2) FROM %s"

SQLQG_FUNCTION_IN_COUNT_SERVER_OPTION,
"SELECT COUNT(IT1C1+IT1C2) FROM %s"
 
SQLQG_COUNT_NON_DISTINCT_SERVER_OPTION,
"SELECT COUNT(IT1C1) FROM %s"
    
SQLQG_MAX_SEL_SIZE_SERVER_OPTION,
"SELECT %s FROM %s"
    
SQLQG_MAX_OB_SIZE_SERVER_OPTION,
"SELECT IT3C1 FROM %s ORDER BY %s"

SQLQG_MAX_GB_SIZE_SERVER_OPTION,
"SELECT IT3C1 FROM %s GROUP BY %s"

SQLQG_OUTER_JOINS_SERVER_OPTION,
"SELECT IT1C3 FROM %s LEFT OUTER JOIN %s ON IT1C1 = IT2C2"

SQLQG_NESTED_TAB_EXPR_SERVER_OPTION,
"SELECT NTE.IT1C1 FROM (SELECT IT1C1, IT1C2 FROM %s) NTE"

SQLQG_UPD_SET_DEFAULT_SERVER_OPTION,
"UPDATE %s SET IT2C3 = DEFAULT WHERE IT2C2 = 56"

SQLQG_BASIC_PRED_RHS_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C2 FROM %s WHERE IT1C1 = (SELECT IT2C2 FROM %s WHERE IT2C1=2)"

SQLQG_UNION_ALL_SERVER_OPTION,
"SELECT IT1C1 FROM %s UNION ALL SELECT IT2C1 FROM %s"

SQLQG_COLFUNC_DISTINCT_SERVER_OPTION,
"SELECT SUM(DISTINCT IT1C1) FROM %s"

SQLQG_SELECT_DISTINCT_SERVER_OPTION,
"SELECT DISTINCT IT1C3 FROM %s"

SQLQG_EXISTS_PRED_SERVER_OPTION,
"SELECT IT1C3 FROM %s WHERE EXISTS (SELECT * FROM %s)"

SQLQG_NULL_IN_SELECT_SERVER_OPTION,
"SELECT NULL, IT1C1 FROM IITEST1"

SQLQG_OB_ITEM_EXPR_SERVER_OPTION,
"SELECT IT1C1,IT1C2 FROM IITEST1 ORDER BY IT1C1+IT1C2"

SQLQG_OB_ITEM_NOT_IN_SELECT_SERVER_OPTION,
"SELECT IT1C3, IT1C4 FROM IITEST1 ORDER BY IT1C1"

SQLQG_OB_ITEM_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1, IT1C2 FROM IITEST1 ORDER BY (SELECT MAX(IT1C1) FROM IITEST1)"

SQLQG_GB_ITEM_COL_ONLY_SERVER_OPTION,
"SELECT SUM(IT1C1) FROM IITEST1 GROUP BY RTRIM(IT1C3) HAVING SUM(IT1C1)>5"

SQLQG_GB_MORE_THAN_NON_AGGR_SERVER_OPTION,
"SELECT SUM(IT1C1) FROM IITEST1 GROUP BY IT1C3"

SQLQG_GB_ITEM_AT_LEAST_ONE_COLUMN_SERVER_OPTION,
"SELECT SUM(IT1C1) FROM IITEST1 GROUP BY RTRIM(IT1C3) HAVING SUM(IT1C1)>5"

SQLQG_GB_MULTI_DISTINCT_SERVER_OPTION,
"SELECT COUNT(DISTINCT IT1C3 ), COUNT(DISTINCT  IT1C4) FROM IITEST1"

SQLQG_GB_ITEM_EXPR_SERVER_OPTION,
"SELECT SUM(IT1C1) FROM IITEST1 GROUP BY IT1C1+IT1C2"

SQLQG_GB_ITEM_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 GROUP BY (SELECT ACOS(IT1C1) FROM IITEST1)"

SQLQG_SELECT_SCALAR_SQ_SERVER_OPTION,
"SELECT (SELECT IT1C1 FROM IITEST1) AS TEST,  IT1C2 FROM IITEST1"

SQLQG_SEL_INTO_CASTING_BND_SERVER_OPTION,
"SELECT CAST(IT1C1 AS SMALLINT ) FROM IITEST1"

SQLQG_SELECT_COL_ONLY_SERVER_OPTION,
"SELECT IT1C1+ IT1C2 FROM IITEST1"

SQLQG_NESTED_TAB_EXPR_W_CORR_SERVER_OPTION,
"SELECT IT1C1 FROM ( SELECT IT1C1 FROM IITEST1 WHERE EXISTS(SELECT IT2C1 FROM IITEST2 WHERE IITEST1.IT1C1 = IITEST2.IT2C1* 10))N"

SQLQG_NESTED_TAB_EXPR_W_SOP_SERVER_OPTION,
"SELECT IT1C1 FROM (SELECT IT1C1 FROM IITEST1 UNION ALL SELECT  IT2C1 FROM IITEST2) N"

SQLQG_NESTED_TAB_EXPR_W_GB_SERVER_OPTION,
"SELECT IT1C1 FROM (SELECT IT1C1 FROM IITEST1 GROUP BY IT1C1 ) N"

SQLQG_NESTED_TAB_EXPR_W_OJ_SERVER_OPTION,
"SELECT N.IT1C1 FROM (SELECT R.IT1C1  FROM IITEST1 R LEFT OUTER JOIN  IITEST2 S ON R.IT1C1 =S.IT2C1 ) N"

SQLQG_NESTED_TAB_EXPR_W_FETCH_N_ROWS_SERVER_OPTION,
"SELECT N.IT1C1 FROM (SELECT IT1C1  FROM IITEST1 FETCH FIRST 5 ROWS ONLY)N"

SQLQG_RECURSION_SERVER_OPTION,
"WITH REPORT AS ( SELECT IT1C1 , IT1C2 FROM IITEST1 WHERE IT1C1 = 0 UNION ALL SELECT B.IT1C1 , B.IT1C2 FROM REPORT A, IITEST1 B WHERE B.IT1C1 = A.IT1C2 ) SELECT * FROM REPORT"

SQLQG_COMMON_TAB_EXPR_SERVER_OPTION,
"WITH T1 AS (SELECT IT1C1, IT1C2 FROM IITEST1) SELECT IT1C1 FROM T1 "

SQLQG_NESTED_TAB_EXPR_W_ORDER_BY_SERVER_OPTION,
"SELECT IT1C1 FROM (SELECT IT1C1 FROM IITEST1 ORDER BY IT1C1 )N"

SQLQG_SQ_W_CORR_SERVER_OPTION,
"SELECT COUNT(IT1C1) FROM IITEST1 WHERE EXISTS(SELECT IT2C1 FROM IITEST2 WHERE IITEST1.IT1C1 = IITEST2.IT2C1* 10)"

SQLQG_SQ_W_SOP_SERVER_OPTION,
"SELECT IT3C1 FROM IITEST3 WHERE IT3C1 IN (SELECT IT1C3 FROM IITEST1 UNION ALL SELECT IT2C3 FROM IITEST2);"

SQLQG_SQ_W_GB_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C1 NOT IN (SELECT SUM(IT2C1) FROM IITEST2 GROUP BY IT2C2)"

SQLQG_SQ_W_OJ_SERVER_OPTION,
"SELECT IT3C1 FROM IITEST3 WHERE IT3C1 IN (SELECT R.IT1C3 FROM IITEST1 R LEFT OUTER JOIN IITEST2 S ON R.IT1C3= S.IT2C3)"

SQLQG_SQ_W_ORDER_BY_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C1 NOT IN (SELECT IT2C1 FROM IITEST2 ORDER BY IT2C2) "

SQLQG_SQ_W_FETCH_N_ROWS_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C1 IN (SELECT IT2C1 FROM IITEST2 ORDER BY IT2C2 FETCH FIRST 5 ROWS ONLY)"

SQLQG_SCALAR_SQ_W_GB_CLAUSE_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C2 IN (SELECT SUM(IT2C2) FROM IITEST2 GROUP BY IT2C1)"

SQLQG_SCALAR_SQ_W_HAVING_CLAUSE_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C2 IN (SELECT SUM(IT2C2) FROM IITEST2 GROUP BY IT2C1 HAVING IT2C1=1)"

SQLQG_UNION_DISTINCT_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 UNION DISTINCT SELECT IT2C1 FROM IITEST2"

SQLQG_EXCEPT_ALL_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 EXCEPT ALL SELECT IT2C1 FROM IITEST2"

SQLQG_EXCEPT_DISTINCT_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 EXCEPT DISTINCT SELECT IT2C1 FROM IITEST2"

SQLQG_INTERSECT_ALL_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 INTERSECT ALL SELECT IT2C1 FROM IITEST2"

SQLQG_INTERSECT_DISTINCT_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 INTERSECT DISTINCT SELECT IT2C1 FROM IITEST2"

SQLQG_CONCAT_NULL_NULL_SERVER_OPTION,
"SELECT CONCAT(NULL, NULL) FROM IITEST1"

SQLQG_COLFUNC_SCALAR_SQ_SERVER_OPTION,
"SELECT COUNT(SELECT AVG(IT1C1) FROM IITEST1) FROM IITEST2"

SQLQG_COUNT_OTHER_SERVER_OPTION,
"SELECT COUNT(DISTINCT IT1C1) FROM IITEST1"

SQLQG_SIMPLE_WHEN_CLAUSE_ONLY_SERVER_OPTION,
"SELECT CASE WHEN (1=1) THEN CASE WHEN (2=3) THEN 'A' ELSE 'K' END ELSE 'B' END  FROM IITEST1"

SQLQG_HAVING_PRED_SERVER_OPTION,
"SELECT IT1C3 FROM IITEST1 GROUP BY IT1C3 HAVING SUM(IT1C1)>100"

SQLQG_BASIC_PRED_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C2>0"

SQLQG_BASIC_PRED_LHS_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE (SELECT SUM(IT2C2) FROM IITEST2)< IT1C1"

SQLQG_NULL_IN_BASIC_PRED_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C1= NULL"

SQLQG_BASIC_PRED_NO_COL_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE 1=1"

SQLQG_LIKE_MATCH_EXPR_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE CONCAT(IT1C3,IT1C4) LIKE 'A%%'"

SQLQG_LIKE_MATCH_COL_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE 'AAA' LIKE 'A%%'"

SQLQG_LIKE_PATTERN_COL_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C3 LIKE IT1C4"

SQLQG_LIKE_PATTERN_EXPR_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C3 LIKE CONCAT(IT1C4,'A')"

SQLQG_LIKE_ESCAPE_EXPR_SERVER_OPTION,
"SELECT IT1C3 FROM IITEST1 WHERE IT1C3 LIKE '\\_\\\\' ESCAPE CONCAT('\\','\\')"

SQLQG_LIKE_ESCAPE_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C3 FROM IITEST1 WHERE IT1C3 LIKE  '\\_\\\\' ESCAPE (SELECT '\\' FROM IITEST2)" 

SQLQG_NULL_PRED_EXPR_SERVER_OPTION,
"select IT1C1 FROM IITEST1 WHERE IT1C1+IT1C2 is not null"

SQLQG_NULL_PRED_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE (SELECT MAX(IT1C3)FROM IITEST1 ) IS NOT NULL"

SQLQG_NULL_PRED_INVARIANT_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE  'AAA' IS NOT NULL"

SQLQG_NULL_IN_NULL_PRED_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE NULL IS NULL "

SQLQG_INLIST_LHS_EXPR_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C1+IT1C2 IN (1,0)"

SQLQG_INLIST_RHS_EXPR_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C1 IN (IT1C1+IT1C2)"

SQLQG_INLIST_LHS_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE (SELECT MAX(IT1C1) FROM IITEST1) IN (1,0)"

SQLQG_INLIST_RHS_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C1 IN (SELECT IT2C1 FROM IITEST2)"

SQLQG_PRD_ARITHEXPR_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE (SELECT AVG(IT1C2) FROM IITEST1)+1 >2"

SQLQG_OJ_PRED_SQ_SERVER_OPTION,
"SELECT IITEST1.IT1C1 FROM IITEST1 LEFT OUTER JOIN (SELECT IT2C1 FROM IITEST2)N ON IITEST1.IT1C1 = N.IT2C1"

SQLQG_FETCH_N_ROWS_SERVER_OPTION,
"SELECT * FROM IITEST1 FETCH FIRST 2 ROWS ONLY"

SQLQG_INLIST_OJ_PRED_SERVER_OPTION,
"SELECT IT1C3 FROM IITEST1 LEFT OUTER JOIN IITEST2  ON IT1C1 = IT2C2 WHERE  IT2C2 IN (10,20)"

SQLQG_OR_OJ_PRED_SERVER_OPTION,
"SELECT IT1C3 FROM IITEST1 LEFT OUTER JOIN IITEST2  ON IT1C1 = IT2C2 WHERE  IT2C2 >2 OR  IT1C1 >3"

SQLQG_LIKE_MATCH_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE (SELECT CONCAT(IT1C3,IT1C4) FROM IITEST1) LIKE 'A'"

SQLQG_LIKE_PATTERN_SCALAR_SQ_SERVER_OPTION,
"SELECT IT1C1 FROM IITEST1 WHERE IT1C3 LIKE (SELECT MAX(IT2C3) FROM IITEST2)"

SQLQG_ALLOW_LIKE_PATTERN_PUSHDOWN_SERVER_OPTION,
"SELECT IT1C3 FROM IITEST1 WHERE IT1C3 like 'abc'"

SQLQG_NULL_EQUALITY_SERVER_OPTION,
"SELECT * FROM IITEST1 WHERE NULL=NULL"

SQLQG_VARCHAR_NO_TRAILING_BLANKS_SERVER_OPTION,
"SELECT IT1C6 FROM IITEST1 WHERE IT1C6 = 'Liu  '"

