create database storedb;

## Create CUSTOMER table under storedb schema
create table storedb.customer (id varchar(11), name varchar(10), card_number varchar(20), sales_rep varchar(10), credit float, marketing integer);

## Insert CUSTOMER data
INSERT INTO storedb.CUSTOMER VALUES('123-11-1111','Customer1','1234-5678-9012-3456','USER1',100,1);

INSERT INTO storedb.CUSTOMER VALUES('123-22-2222','Customer2','3459-5344-6452-1234','DB2TEST',200,0);

INSERT INTO storedb.CUSTOMER VALUES('123-33-3333','Customer3','4335-5633-5673-9634','USER1',300,0);

INSERT INTO storedb.CUSTOMER VALUES('123-44-4444','Customer4','7647-9246-2345-3452','DB2TEST',400,1);

## Sanity check for CUSTOMER table
select * from storedb.customer;

## Creating roles and granting privileges
CREATE ROLE marketing;
CREATE ROLE accountant;
CREATE ROLE sales;

GRANT SELECT, UPDATE ON TABLE storedb.customer TO ROLE accountant;
GRANT SELECT, INSERT, UPDATE ON TABLE storedb.customer TO ROLE sales;
GRANT SELECT ON TABLE storedb.customer TO ROLE marketing;

## Check if db2admin has SECADM privileges
SELECT GRANTEE FROM SYSCAT.DBAUTH WHERE SECURITYADMAUTH='Y';

## Create the following row permissions
CREATE PERMISSION row_access_sales ON storedb.customer \
FOR ROWS WHERE \
( \
VERIFY_ROLE_FOR_USER(SESSION_USER, 'SALES') = 1 \
AND STOREDB.CUSTOMER.SALES_REP = SESSION_USER \
) \
ENFORCED FOR ALL ACCESS \
ENABLE;

CREATE PERMISSION row_access_accountant ON storedb.customer \
FOR ROWS WHERE \
(VERIFY_ROLE_FOR_USER(SESSION_USER, 'ACCOUNTANT') = 1) \
ENFORCED FOR ALL ACCESS \
ENABLE;

CREATE PERMISSION row_access_marketing ON storedb.customer \
FOR ROWS WHERE \
( \
VERIFY_ROLE_FOR_USER(SESSION_USER, 'MARKETING') = 1 \
AND STOREDB.CUSTOMER.MARKETING = 1 \
) \
ENFORCED FOR ALL ACCESS \
ENABLE;

## Create column masks
CREATE MASK STOREDB.CREDIT_MASK ON storedb.customer \
FOR COLUMN CREDIT RETURN \
CASE WHEN VERIFY_ROLE_FOR_USER(SESSION_USER, 'ACCOUNTANT') = 1 \
THEN CREDIT \
ELSE 0.00 \
END \
ENABLE;

CREATE MASK STOREDB.CARD_NUMBER_MASK ON STOREDB.CUSTOMER FOR \
COLUMN CARD_NUMBER RETURN \
CASE WHEN \
VERIFY_ROLE_FOR_USER(SESSION_USER, 'ACCOUNTANT') = 1 \
THEN CARD_NUMBER \
ELSE CHAR('XXXX-XXXX-XXXX-' || SUBSTR(CARD_NUMBER,16,4)) END \
ENABLE;

## Activate RCAC on the tbale STOREDB.CUSTOMER
ALTER TABLE STOREDB.CUSTOMER ACTIVATE COLUMN ACCESS CONTROL;
ALTER TABLE STOREDB.CUSTOMER ACTIVATE ROW ACCESS CONTROL;

## Granting roles to user
GRANT ROLE SALES TO DB2TEST;